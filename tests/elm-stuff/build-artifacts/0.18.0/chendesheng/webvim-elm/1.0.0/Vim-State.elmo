var _chendesheng$webvim_elm$Vim_State$defaultRegister = '\"';
var _chendesheng$webvim_elm$Vim_State$Mode = F5(
	function (a, b, c, d, e) {
		return {count: a, edit: b, register: c, mode: d, recordMacro: e};
	});
var _chendesheng$webvim_elm$Vim_State$PushCount = function (a) {
	return {ctor: 'PushCount', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$PushRegister = function (a) {
	return {ctor: 'PushRegister', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$PopRecordMacro = {ctor: 'PopRecordMacro'};
var _chendesheng$webvim_elm$Vim_State$PushRecordMacro = function (a) {
	return {ctor: 'PushRecordMacro', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$PopComplete = {ctor: 'PopComplete'};
var _chendesheng$webvim_elm$Vim_State$PushComplete = {ctor: 'PushComplete'};
var _chendesheng$webvim_elm$Vim_State$PopOperator = {ctor: 'PopOperator'};
var _chendesheng$webvim_elm$Vim_State$PushOperator = function (a) {
	return {ctor: 'PushOperator', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$PopMode = {ctor: 'PopMode'};
var _chendesheng$webvim_elm$Vim_State$PushMode = function (a) {
	return {ctor: 'PushMode', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$PushKeys = function (a) {
	return {ctor: 'PushKeys', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$PushKey = function (a) {
	return {ctor: 'PushKey', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$PopKey = {ctor: 'PopKey'};
var _chendesheng$webvim_elm$Vim_State$PartialInsertCommand = {ctor: 'PartialInsertCommand'};
var _chendesheng$webvim_elm$Vim_State$EscapeInsert = {ctor: 'EscapeInsert'};
var _chendesheng$webvim_elm$Vim_State$PutRegister = {ctor: 'PutRegister'};
var _chendesheng$webvim_elm$Vim_State$InsertString = function (a) {
	return {ctor: 'InsertString', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$IndentLine = function (a) {
	return {ctor: 'IndentLine', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$DeleteWord = function (a) {
	return {ctor: 'DeleteWord', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$DeleteChar = function (a) {
	return {ctor: 'DeleteChar', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$GotoLineEnd = {ctor: 'GotoLineEnd'};
var _chendesheng$webvim_elm$Vim_State$GotoLineStart = {ctor: 'GotoLineStart'};
var _chendesheng$webvim_elm$Vim_State$PunctuationEnd = {ctor: 'PunctuationEnd'};
var _chendesheng$webvim_elm$Vim_State$PunctuationStart = {ctor: 'PunctuationStart'};
var _chendesheng$webvim_elm$Vim_State$CharStart = {ctor: 'CharStart'};
var _chendesheng$webvim_elm$Vim_State$ParagraphEnd = {ctor: 'ParagraphEnd'};
var _chendesheng$webvim_elm$Vim_State$ParagraphStart = {ctor: 'ParagraphStart'};
var _chendesheng$webvim_elm$Vim_State$LineEnd = {ctor: 'LineEnd'};
var _chendesheng$webvim_elm$Vim_State$LineStart = {ctor: 'LineStart'};
var _chendesheng$webvim_elm$Vim_State$LineFirst = {ctor: 'LineFirst'};
var _chendesheng$webvim_elm$Vim_State$WORDEnd = {ctor: 'WORDEnd'};
var _chendesheng$webvim_elm$Vim_State$WORDStart = {ctor: 'WORDStart'};
var _chendesheng$webvim_elm$Vim_State$WordEnd = {ctor: 'WordEnd'};
var _chendesheng$webvim_elm$Vim_State$WordStart = {ctor: 'WordStart'};
var _chendesheng$webvim_elm$Vim_State$PartialTextObject = {ctor: 'PartialTextObject'};
var _chendesheng$webvim_elm$Vim_State$Pair = function (a) {
	return {ctor: 'Pair', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$WORD = {ctor: 'WORD'};
var _chendesheng$webvim_elm$Vim_State$Line = {ctor: 'Line'};
var _chendesheng$webvim_elm$Vim_State$Word = {ctor: 'Word'};
var _chendesheng$webvim_elm$Vim_State$Backward = {ctor: 'Backward'};
var _chendesheng$webvim_elm$Vim_State$Forward = {ctor: 'Forward'};
var _chendesheng$webvim_elm$Vim_State$Exclusive = {ctor: 'Exclusive'};
var _chendesheng$webvim_elm$Vim_State$Inclusive = {ctor: 'Inclusive'};
var _chendesheng$webvim_elm$Vim_State$VisualRange = {ctor: 'VisualRange'};
var _chendesheng$webvim_elm$Vim_State$MotionRange = F2(
	function (a, b) {
		return {ctor: 'MotionRange', _0: a, _1: b};
	});
var _chendesheng$webvim_elm$Vim_State$TextObject = F2(
	function (a, b) {
		return {ctor: 'TextObject', _0: a, _1: b};
	});
var _chendesheng$webvim_elm$Vim_State$ReplayMacro = function (a) {
	return {ctor: 'ReplayMacro', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$Redo = {ctor: 'Redo'};
var _chendesheng$webvim_elm$Vim_State$Undo = {ctor: 'Undo'};
var _chendesheng$webvim_elm$Vim_State$CompleteWord = function (a) {
	return {ctor: 'CompleteWord', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$ExMode = function (a) {
	return {ctor: 'ExMode', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$InsertMode = function (a) {
	return {ctor: 'InsertMode', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$JumpByView = function (a) {
	return {ctor: 'JumpByView', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$JumpHistory = function (a) {
	return {ctor: 'JumpHistory', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$Scroll = function (a) {
	return {ctor: 'Scroll', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$OpenNewLine = function (a) {
	return {ctor: 'OpenNewLine', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$StartInsert = function (a) {
	return {ctor: 'StartInsert', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$RepeatLastAction = {ctor: 'RepeatLastAction'};
var _chendesheng$webvim_elm$Vim_State$Join = function (a) {
	return {ctor: 'Join', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$Indent = F2(
	function (a, b) {
		return {ctor: 'Indent', _0: a, _1: b};
	});
var _chendesheng$webvim_elm$Vim_State$Put = function (a) {
	return {ctor: 'Put', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$Yank = function (a) {
	return {ctor: 'Yank', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$Delete = function (a) {
	return {ctor: 'Delete', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$Select = F2(
	function (a, b) {
		return {ctor: 'Select', _0: a, _1: b};
	});
var _chendesheng$webvim_elm$Vim_State$Move = function (a) {
	return {ctor: 'Move', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$Execute = {ctor: 'Execute'};
var _chendesheng$webvim_elm$Vim_State$InsertWordUnderCursor = {ctor: 'InsertWordUnderCursor'};
var _chendesheng$webvim_elm$Vim_State$ExInsert = function (a) {
	return {ctor: 'ExInsert', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$ModeNameVisualBlock = {ctor: 'ModeNameVisualBlock'};
var _chendesheng$webvim_elm$Vim_State$ModeNameVisualLine = {ctor: 'ModeNameVisualLine'};
var _chendesheng$webvim_elm$Vim_State$ModeNameVisual = {ctor: 'ModeNameVisual'};
var _chendesheng$webvim_elm$Vim_State$ModeNameEx = function (a) {
	return {ctor: 'ModeNameEx', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$ModeNameTempNormal = {ctor: 'ModeNameTempNormal'};
var _chendesheng$webvim_elm$Vim_State$ModeNameInsert = {ctor: 'ModeNameInsert'};
var _chendesheng$webvim_elm$Vim_State$ModeNameNormal = {ctor: 'ModeNameNormal'};
var _chendesheng$webvim_elm$Vim_State$initialMode = {count: 1, edit: _elm_lang$core$Maybe$Nothing, register: _chendesheng$webvim_elm$Vim_State$defaultRegister, mode: _chendesheng$webvim_elm$Vim_State$ModeNameNormal, recordMacro: _elm_lang$core$Maybe$Nothing};
var _chendesheng$webvim_elm$Vim_State$PartialMotion = {ctor: 'PartialMotion'};
var _chendesheng$webvim_elm$Vim_State$MatchPair = {ctor: 'MatchPair'};
var _chendesheng$webvim_elm$Vim_State$LastLine = {ctor: 'LastLine'};
var _chendesheng$webvim_elm$Vim_State$LineNumber = function (a) {
	return {ctor: 'LineNumber', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$LineDelta = function (a) {
	return {ctor: 'LineDelta', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$VLineDelta = function (a) {
	return {ctor: 'VLineDelta', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$ViewBottom = {ctor: 'ViewBottom'};
var _chendesheng$webvim_elm$Vim_State$ViewMiddle = {ctor: 'ViewMiddle'};
var _chendesheng$webvim_elm$Vim_State$ViewTop = {ctor: 'ViewTop'};
var _chendesheng$webvim_elm$Vim_State$MatchString = function (a) {
	return {ctor: 'MatchString', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$MatchChar = function (a) {
	return {ctor: 'MatchChar', _0: a};
};
var _chendesheng$webvim_elm$Vim_State$ByClass = function (a) {
	return {ctor: 'ByClass', _0: a};
};
